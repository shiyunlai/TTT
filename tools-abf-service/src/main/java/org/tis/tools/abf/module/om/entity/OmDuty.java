package org.tis.tools.abf.module.om.entity;

import com.baomidou.mybatisplus.activerecord.Model;
import com.baomidou.mybatisplus.annotations.TableName;
import org.tis.tools.core.utils.StringUtil;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

/**
 * Model class of 职务定义表.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@TableName ("OM_DUTY")
public class OmDuty extends Model<OmDuty> {
	@Override
	protected Serializable pkVal() {
		return this.guid;
	}
	/** 对应的数据库表名称 */
	public static final String TABLE_NAME = "OM_DUTY";
	/* OM_DUTY table's columns definition */
	/** GUID ：数据主键<br/><br/>全局唯一标识符（GUID，Globally Unique Identifier），系统自动生成； */
	public static final String COLUMN_GUID = "guid" ;
	/** DUTY_CODE ：职务代码<br/><br/> */
	public static final String COLUMN_DUTY_CODE = "duty_code" ;
	/** DUTY_NAME ：职务名称<br/><br/> */
	public static final String COLUMN_DUTY_NAME = "duty_name" ;
	/** DUTY_TYPE ：职务套别<br/><br/>见业务字典： DICT_OM_DUTYTYPE 例如科技类，审计类等 */
	public static final String COLUMN_DUTY_TYPE = "duty_type" ;
	/** GUID_PARENTS ：父职务GUID<br/><br/> */
	public static final String COLUMN_GUID_PARENTS = "guid_parents" ;
	/** ISLEAF ：是否叶子节点<br/><br/>取值来自业务菜单：DICT_YON */
	public static final String COLUMN_ISLEAF = "isleaf" ;
	/** SUB_COUNT ：子节点数<br/><br/> */
	public static final String COLUMN_SUB_COUNT = "sub_count" ;
	/** DUTY_LEVEL ：职务层次<br/><br/> */
	public static final String COLUMN_DUTY_LEVEL = "duty_level" ;
	/** DUTY_SEQ ：职务序列<br/><br/>职务的面包屑定位信息 */
	public static final String COLUMN_DUTY_SEQ = "duty_seq" ;
	/** REMARK ：备注<br/><br/> */
	public static final String COLUMN_REMARK = "remark" ;
	/** 对应的类名 */
	public static final String CLASS_NAME = "org.tis.tools.model.po.om.OmDuty";
	/** GUID字段名<br/> */
	public static final String NAME_GUID = "数据主键" ;
	/** DUTY_CODE字段名<br/> */
	public static final String NAME_DUTY_CODE = "职务代码" ;
	/** DUTY_NAME字段名<br/> */
	public static final String NAME_DUTY_NAME = "职务名称" ;
	/** DUTY_TYPE字段名<br/> */
	public static final String NAME_DUTY_TYPE = "职务套别" ;
	/** GUID_PARENTS字段名<br/> */
	public static final String NAME_GUID_PARENTS = "父职务GUID" ;
	/** ISLEAF字段名<br/> */
	public static final String NAME_ISLEAF = "是否叶子节点" ;
	/** SUB_COUNT字段名<br/> */
	public static final String NAME_SUB_COUNT = "子节点数" ;
	/** DUTY_LEVEL字段名<br/> */
	public static final String NAME_DUTY_LEVEL = "职务层次" ;
	/** DUTY_SEQ字段名<br/> */
	public static final String NAME_DUTY_SEQ = "职务序列" ;
	/** REMARK字段名<br/> */
	public static final String NAME_REMARK = "备注" ;


	/** 字段类型：varchar<br/>字段名：数据主键<br/>描述：全局唯一标识符（GUID，Globally Unique Identifier），系统自动生成； */
	private String guid ;

	/** 字段类型：varchar<br/>字段名：职务代码<br/>描述： */
	private String dutyCode ;

	/** 字段类型：varchar<br/>字段名：职务名称<br/>描述： */
	private String dutyName ;

	/** 字段类型：varchar<br/>字段名：职务套别<br/>描述：见业务字典： DICT_OM_DUTYTYPE 例如科技类，审计类等 */
	private String dutyType ;

	/** 字段类型：varchar<br/>字段名：父职务GUID<br/>描述： */
	private String guidParents ;

	/** 字段类型：char<br/>字段名：是否叶子节点<br/>描述：取值来自业务菜单：DICT_YON */
	private String isleaf ;

	/** 字段类型：decimal<br/>字段名：子节点数<br/>描述： */
	private BigDecimal subCount ;

	/** 字段类型：decimal<br/>字段名：职务层次<br/>描述： */
	private BigDecimal dutyLevel ;

	/** 字段类型：varchar<br/>字段名：职务序列<br/>描述：职务的面包屑定位信息 */
	private String dutySeq ;

	/** 字段类型：varchar<br/>字段名：备注<br/>描述： */
	private String remark ;

	/**
	 * Default Constructor
	 */
	public OmDuty() {
	}


	/**
	 * Set the 数据主键.
	 *
	 * @param guid
	 *            数据主键
	 */
	public void setGuid(String guid) {
		this.guid = guid == null ? null : guid.trim() ;
	}

	/**
	 * Get the 数据主键.
	 *
	 * @return 数据主键
	 */
	public String getGuid(){
		return this.guid ;
	}

	/**
	 * Set the 职务代码.
	 *
	 * @param dutyCode
	 *            职务代码
	 */
	public void setDutyCode(String dutyCode) {
		this.dutyCode = dutyCode == null ? null : dutyCode.trim() ;
	}

	/**
	 * Get the 职务代码.
	 *
	 * @return 职务代码
	 */
	public String getDutyCode(){
		return this.dutyCode ;
	}

	/**
	 * Set the 职务名称.
	 *
	 * @param dutyName
	 *            职务名称
	 */
	public void setDutyName(String dutyName) {
		this.dutyName = dutyName == null ? null : dutyName.trim() ;
	}

	/**
	 * Get the 职务名称.
	 *
	 * @return 职务名称
	 */
	public String getDutyName(){
		return this.dutyName ;
	}

	/**
	 * Set the 职务套别.
	 *
	 * @param dutyType
	 *            职务套别
	 */
	public void setDutyType(String dutyType) {
		this.dutyType = dutyType == null ? null : dutyType.trim() ;
	}

	/**
	 * Get the 职务套别.
	 *
	 * @return 职务套别
	 */
	public String getDutyType(){
		return this.dutyType ;
	}

	/**
	 * Set the 父职务GUID.
	 *
	 * @param guidParents
	 *            父职务GUID
	 */
	public void setGuidParents(String guidParents) {
		this.guidParents = guidParents == null ? null : guidParents.trim() ;
	}

	/**
	 * Get the 父职务GUID.
	 *
	 * @return 父职务GUID
	 */
	public String getGuidParents(){
		return this.guidParents ;
	}

	/**
	 * Set the 是否叶子节点.
	 *
	 * @param isleaf
	 *            是否叶子节点
	 */
	public void setIsleaf(String isleaf) {
		this.isleaf = isleaf == null ? null : isleaf.trim() ;
	}

	/**
	 * Get the 是否叶子节点.
	 *
	 * @return 是否叶子节点
	 */
	public String getIsleaf(){
		return this.isleaf ;
	}

	/**
	 * Set the 子节点数.
	 *
	 * @param subCount
	 *            子节点数
	 */
	public void setSubCount(BigDecimal subCount) {
		this.subCount = subCount ;
	}

	/**
	 * Get the 子节点数.
	 *
	 * @return 子节点数，如果setSubCount时原值为空，返回BigDecimal(0d)
	 */
	public BigDecimal getSubCount(){
		if(subCount==null){
			return new BigDecimal(0d);
		}
		return subCount;
	}

	/**
	 * Set the 职务层次.
	 *
	 * @param dutyLevel
	 *            职务层次
	 */
	public void setDutyLevel(BigDecimal dutyLevel) {
		this.dutyLevel = dutyLevel ;
	}

	/**
	 * Get the 职务层次.
	 *
	 * @return 职务层次，如果setDutyLevel时原值为空，返回BigDecimal(0d)
	 */
	public BigDecimal getDutyLevel(){
		if(dutyLevel==null){
			return new BigDecimal(0d);
		}
		return dutyLevel;
	}

	/**
	 * Set the 职务序列.
	 *
	 * @param dutySeq
	 *            职务序列
	 */
	public void setDutySeq(String dutySeq) {
		this.dutySeq = dutySeq == null ? null : dutySeq.trim() ;
	}

	/**
	 * Get the 职务序列.
	 *
	 * @return 职务序列
	 */
	public String getDutySeq(){
		return this.dutySeq ;
	}

	/**
	 * Set the 备注.
	 *
	 * @param remark
	 *            备注
	 */
	public void setRemark(String remark) {
		this.remark = remark == null ? null : remark.trim() ;
	}

	/**
	 * Get the 备注.
	 *
	 * @return 备注
	 */
	public String getRemark(){
		return this.remark ;
	}

	public String toString(){
		return StringUtil.toString(this) ;
	}
}